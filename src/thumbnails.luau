local serde = require("@lune/serde")
local requestWithCsrfToken = require("./utils/request-with-csrf-token")
local Result = require("../lune_packages/result")

type Error = requestWithCsrfToken.Error
type Response<T> = Result.Result<T, Error>

--- A response model for thumbnails which belong to a specific universe ID
export type UniverseThumbnailsResponse = { universeId: number, error: ApiErrorModel, thumbnails: { ThumbnailResponse } }

export type ThumbnailBatchRequest = {
	isCircular: boolean,
	type: "Avatar"
		| "AvatarHeadShot"
		| "GameIcon"
		| "BadgeIcon"
		| "GameThumbnail"
		| "GamePass"
		| "Asset"
		| "BundleThumbnail"
		| "Outfit"
		| "GroupIcon"
		| "DeveloperProduct"
		| "AvatarBust"
		| "AutoGeneratedAsset"
		| "PlaceIcon"
		| "AutoGeneratedGameIcon"
		| "ForceAutoGeneratedGameIcon"
		| "Look",
	targetId: number,
	token: string,
	size: string,
	format: string,
	alias: string,
	requestId: string,
}

export type ThumbnailBatchResponse = {
	state: "Error" | "Completed" | "InReview" | "Pending" | "Blocked" | "TemporarilyUnavailable",
	targetId: number,
	version: string,
	imageUrl: string,
	errorCode: number,
	errorMessage: string,
	requestId: string,
}

--- Returns a list of thumbnails with varying types and sizes
local function batch(requests: { ThumbnailBatchRequest }, cookie: string): Response<{ ThumbnailBatchResponse }>
	return requestWithCsrfToken({
		method = "POST",
		url = `https://thumbnails.roblox.com/v1/batch`,
		headers = { ["Content-Type"] = "application/json", Cookie = `.ROBLOSECURITY={cookie}` },
		body = serde.encode("json", { requests = requests }),
	}):map(function(response)
		return serde.decode("json", response.body).data
	end)
end

return { batch = batch }
